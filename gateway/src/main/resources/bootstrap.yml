sc:
  service:
    client: client
    consumer: consumer
spring:
  application:
    name: gateway
  redis:
    host: 192.168.124.16
    port: 6379
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    gateway:
      discovery:  # \u7F51\u5173\u914D\u7F6E\u4E3A\u57FA\u4E8E\u5728DiscoveryClient\u517C\u5BB9\u670D\u52A1\u6CE8\u518C\u4E2D\u5FC3\u6CE8\u518C\u7684\u670D\u52A1\u6765\u521B\u5EFA\u8DEF\u7531\u3002
        locator:
          enabled: true #\u786E\u4FDD\u5F00\u542F\u6CE8\u89E3@EnableDiscoveryClient
      routes: #\u8DEF\u7531\u89C4\u5219
        # client
        - id: ${sc.service.client}
          uri: http://${sc.service.client}
          predicates:
            - Path=/${sc.service.client}/**
        # consumer
        - id: ${sc.service.consumer}
          uri: http://${sc.service.consumer}
          filters:
            - AddRequestParameter=foo, bar
          predicates:
            - Path=/${sc.service.consumer}/**
            - Method=GET
#        - name: RequestRateLimiter
#          args:
#            # \u4F7F\u7528SpEL\u6309\u540D\u79F0\u5F15\u7528bean
#            key-resolver: '#{@remoteAddrKeyResolver}'
#            # \u5141\u8BB8\u7528\u6237\u6BCF\u79D2\u5904\u7406\u591A\u5C11\u4E2A\u8BF7\u6C42
#            redis-rate-limiter.replenishRate: 1
#            # \u4EE4\u724C\u6876\u7684\u5BB9\u91CF,\u5141\u8BB8\u5728\u4E00\u79D2\u949F\u5185\u5B8C\u6210\u7684\u6700\u5927\u8BF7\u6C42\u6570
#            redis-rate-limiter.burstCapacity: 1
#        - StripPrefix=1
#        filters:
#        - AddRequestHeader=X-Request-Chen, Bar

